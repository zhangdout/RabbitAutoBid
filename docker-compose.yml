# docker compose up -d 创建容器启动 docker-compose.yml 文件中定义的所有服务的命令，并且以后台模式运行。
# docker ps 查看运行中的服务
# docker stats 检查内存占用
# docker-compose stop 暂停容器，不删除容器。释放内存。
# docker-compose start 暂停之后重新启动
# docker-compose down 停止并删除所有容器。默认不会删除数据卷volume。你不再需要容器，希望彻底清理它们。你要更新 docker-compose.yml 并重新创建容器。
# docker volume ls 查看所有volume


# Docker Compose 允许在一个 docker-compose.yml 文件中定义多个服务（services）。
# 每个服务都会运行在自己的独立容器中，它们之间不会互相干扰。
# Docker 网络 会让它们可以相互通信，但默认情况下不会暴露给外部，除非通过 ports 进行端口映射。
services:
  # 使用官方的 PostgreSQL 镜像，这个名字必须是 Docker Hub 上的镜像名称
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - /var/lib/postgresql/data

  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017
    volumes:
      - /data/db

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" #管理rabbitmq的web界面。登陆账号和密码可以使用guest

  auction-svc:
    image: zhangdout/auction-svc:latest # 有build命令，会先build并命名为该名字，保存在本地。没有build命令则会远程拉取。
    build: 
      context: . # 在RabbitAutoBid目录下构建
      dockerfile: src/AuctionService/Dockerfile
    environment: # 会覆盖appsettings.json中的环境变量
      - ASPNETCORE_ENVIRONMENT=Development
      # 如果你不指定 ASPNETCORE_URLS：
      # docker run -p 7001:5000 把宿主机的 7001 端口映射到了容器的 5000 端口。
      # 但 ASP.NET Core 默认只监听 localhost:5000，不允许外部访问！因为这里是容器内部的 localhost。在宿主机访问http://localhost:7001会失败。
      - ASPNETCORE_URLS=http://+:80
      - RabbitMQ__Host=rabbitmq # 双下划线 #直接用上面的服务名称rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres;User Id=postgres;Password=postgrespw;Database=auctions # 不能出现localhost，改成service名称
      - IdentityServiceUrl=http://identity-svc
    ports:
      - 7001:80
    depends_on: # 等待依赖的服务启动后再启动
      - postgres
      - rabbitmq
  
  search-svc:
    image: zhangdout/search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMQ__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb # 不能出现localhost，改成service名称
      - AuctionServiceUrl=http://auction-svc
    ports:
      - 7002:80
    depends_on:
      - mongodb
      - rabbitmq

# 使用volume：
#数据存储在 Docker 卷（docker volume）中
#数据不会因容器删除而丢失
#存储位置由 Docker 管理，适用于持久化数据
# 不使用volume：
#数据直接存储在宿主机路径 /var/lib/postgresql/data 和 /data/db
#可能会导致权限问题
#路径必须存在，否则 Docker 可能会创建空文件夹
